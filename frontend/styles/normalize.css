:root,
body,
.sl-theme-light,
.sl-theme-dark {
  --text-color: var(--sl-color-neutral-1000);
  --light-text-color: var(--sl-color-neutral-700);
  --body-color: var(--sl-color-neutral-0);
  --color-primary: var(--sl-color-primary-600);
  --text-color-primary: var(--sl-color-primary-700);
  --link-color: var(--sl-color-primary-700);
  --link-color-focus: var(--sl-color-primary-500);
  --divider-color: var(--sl-color-neutral-300);
  --code-color: hsl(209, 27%, 26%);
  --code-background-color: hsl(210, 29%, 97%);
}

html {
  box-sizing: border-box;
  min-height: 100%;
  display: grid;
}

*, *:before, *:after {
  box-sizing: border-box;
}

body {
  max-width: 100vw;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  font-family: var(--sl-font-sans);
  min-height: 100%;
  margin: 0;
  padding: 0;
}

[hidden] {
  display: none !important;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

body {
  font-family: var(--sl-font-sans);
  min-height: 100%;
}

button {
  appearance: none;
  border: none;
  background: none;
}

button:hover {
  cursor: pointer;
}

h1,h2,h3,h4 {
  scroll-margin-top: calc(80px + 2em);
}

h1 {
  padding: 0.25em var(--sl-spacing-large);
}

h2 {
  padding: 0.25em var(--sl-spacing-medium);
}

h3,h4 {
  padding: 0.25em var(--sl-spacing-x-small);
  margin: var(--sl-spacing-xx-small) var(--sl-spacing-small);
}

h1 {
  font-size: var(--sl-font-size-2x-large);
}

h2 {
  font-size: var(--sl-font-size-x-large);
  margin-top: var(--sl-spacing-xx-large);
  margin-bottom: var(--sl-spacing-small);
}

h3 {
  font-size: var(--sl-font-size-large);
  margin-top: var(--sl-spacing-x-large);
}

h4 {
  margin-top: var(--sl-spacing-large);
  font-size: var(--sl-font-size-large);
}

p {
  margin: var(--sl-spacing-small) var(--sl-spacing-large);
}

p, li {
  line-height: 1.6;
  font-size: 1.1rem;
}

ul {
  line-height: 1.8;
  list-style: disc outside;
}

ul ul {
  list-style: circle outside;
}

ul ul ul {
  list-style: square outside;
}

ul ul ul ul {
  list-style: disc outside;
}

/* code blocks */
/* inline code highlights */
a,
a > code,
a > * > code,
a > * > code[class*="language-"] {
  word-wrap: anywhere;
  /* outline: transparent; */
  /* Unable to distinguish identifier, this makes links obvious */
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-color: var(--link-color);
  text-underline-offset: 0.25em;
  color: var(--link-color);
  border-radius: 0;
  display: inline;
  padding: 0.05em 0;
  line-height: 1.2;
}

[tabindex="-1"] {
  outline: transparent;
}

/* a > code, */
/* a > * > code, */
/* a > * > code[class*="language-"] { */
/*   text-decoration: none; */
/* } */


a:hover > code, a:focus > code,
a:hover > * > code, a:focus > * > code[class*="language-"],
a:hover, a:focus {
  color: var(--link-color-focus);
}

a:focus, a:hover {
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-color: var(--link-color-focus);
}

div[class*="language-"] {
  margin: var(--sl-spacing-xx-small) 0 var(--sl-spacing-xxx-large) 0 !important;
}

/* Code block */
pre {
  padding: var(--sl-spacing-large);
  margin: var(--sl-spacing-large) 0;
  overflow-x: auto;
}

code > span {
  line-height: var(--sl-line-height-dense);
}

.highlighter-rouge,
.highlight {
  border-radius: var(--sl-border-radius-large);
  font-size: 1.1em;
  line-height: 1.4;
}

.highlight,
.highlighter-rouge {
  position: relative;
}

/* Inline code blocks */
code.highlight,
code.highlighter-rouge {
  display: inline-block;
  font-size: 0.95em;
  padding: 0.2em 0.4em;
  margin: var(--sl-spacing-xx-small) 0;
  border-radius: 4px;
  background-color: var(--code-background-color);
  color: var(--code-color);
  white-space: break-spaces;
  vertical-align: middle;
}

/* :where(:not(:defined)) { */
/*   visibility: hidden; */
/* } */

/** https://github.com/shoelace-style/shoelace/pull/1317 */
sl-button::part(base) {
  min-height: var(--sl-input-height-medium);
  height: auto;
}

sl-button[size='large']::part(base) {
  min-height: var(--sl-input-height-large);
  height: auto;
}

sl-button[size='small']::part(base) {
  min-height: var(--sl-input-height-small);
  height: auto;
}
